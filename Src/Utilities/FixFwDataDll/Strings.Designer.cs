//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIL.FieldWorks.FixData {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIL.FieldWorks.FixData.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this utility fails, you will need to go back to a previously saved version of the chosen database..
        /// </summary>
        internal static string ksErrorFixerCannotUndo {
            get {
                return ResourceManager.GetString("ksErrorFixerCannotUndo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This utility attempts to fix various errors in a FieldWorks project file.  The project must not be open, and must be in the fwdata (XML) format..
        /// </summary>
        internal static string ksErrorFixerThisUtilityAttemptsTo {
            get {
                return ResourceManager.GetString("ksErrorFixerThisUtilityAttemptsTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this when a project is throwing exceptions such as &quot;Key 62c22e20-8d8a-42bf-a54c-e21529284f2d not found in identity map...&quot;, and you suspect the data has been corrupted somehow..
        /// </summary>
        internal static string ksErrorFixerUseThisWhen {
            get {
                return ResourceManager.GetString("ksErrorFixerUseThisWhen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Errors found or fixed.
        /// </summary>
        internal static string ksErrorsFoundOrFixed {
            get {
                return ResourceManager.GetString("ksErrorsFoundOrFixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find and fix errors in a FieldWorks data (XML) file..
        /// </summary>
        internal static string ksFindAndFixErrors {
            get {
                return ResourceManager.GetString("ksFindAndFixErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write Everything.
        /// </summary>
        internal static string WriteEverything {
            get {
                return ResourceManager.GetString("WriteEverything", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation cannot be undone, since it makes no changes..
        /// </summary>
        internal static string WriteEverythingCannotUndo {
            get {
                return ResourceManager.GetString("WriteEverythingCannotUndo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This utility writes all CmObjects out fresh, as if they had all been modified. (It does not update their date modified).
        /// </summary>
        internal static string WriteEverythingThisUtilityAttemptsTo {
            get {
                return ResourceManager.GetString("WriteEverythingThisUtilityAttemptsTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run this whenever you want to write out all CmObjects in the system. This will fix Send/Receive failures if basic attributes were somehow lost in the fwdata file, or if the fwdata file contains dates in invalid formats..
        /// </summary>
        internal static string WriteEverythingUseThisWhen {
            get {
                return ResourceManager.GetString("WriteEverythingUseThisWhen", resourceCulture);
            }
        }
    }
}
