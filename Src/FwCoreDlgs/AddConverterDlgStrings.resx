<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
	Microsoft ResX Schema

	Version 2.0

	The primary goals of this format is to allow a simple XML format
	that is mostly human readable. The generation and parsing of the
	various data types are done through the TypeConverter classes
	associated with the data types.

	Example:

	... ado.net/XML headers & schema ...
	<resheader name="resmimetype">text/microsoft-resx</resheader>
	<resheader name="version">2.0</resheader>
	<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
	<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
	<data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
	<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
	<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
		<value>[base64 mime encoded serialized .NET Framework object]</value>
	</data>
	<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
		<value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
		<comment>This is a comment</comment>
	</data>

	There are any number of "resheader" rows that contain simple
	name/value pairs.

	Each data row contains a name, and value. The row also contains a
	type or mimetype. Type corresponds to a .NET class that support
	text/value conversion through the TypeConverter architecture.
	Classes that don't support this are serialized and stored with the
	mimetype set.

	The mimetype is used for serialized objects, and tells the
	ResXResourceReader how to depersist the object. This is currently not
	extensible. For a given mimetype the value must be set accordingly:

	Note - application/x-microsoft.net.object.binary.base64 is the format
	that the ResXResourceWriter will generate, however the reader can
	read any of the formats listed below.

	mimetype: application/x-microsoft.net.object.binary.base64
	value   : The object must be serialized with
			: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

	mimetype: application/x-microsoft.net.object.soap.base64
	value   : The object must be serialized with
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

	mimetype: application/x-microsoft.net.object.bytearray.base64
	value   : The object must be serialized into a byte array
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
	<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
	<xsd:element name="root" msdata:IsDataSet="true">
	  <xsd:complexType>
		<xsd:choice maxOccurs="unbounded">
		  <xsd:element name="metadata">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" />
			  </xsd:sequence>
			  <xsd:attribute name="name" use="required" type="xsd:string" />
			  <xsd:attribute name="type" type="xsd:string" />
			  <xsd:attribute name="mimetype" type="xsd:string" />
			  <xsd:attribute ref="xml:space" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="assembly">
			<xsd:complexType>
			  <xsd:attribute name="alias" type="xsd:string" />
			  <xsd:attribute name="name" type="xsd:string" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="data">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
				<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
			  </xsd:sequence>
			  <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
			  <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
			  <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
			  <xsd:attribute ref="xml:space" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="resheader">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
			  </xsd:sequence>
			  <xsd:attribute name="name" type="xsd:string" use="required" />
			</xsd:complexType>
		  </xsd:element>
		</xsd:choice>
	  </xsd:complexType>
	</xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
	<value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
	<value>2.0</value>
  </resheader>
  <resheader name="reader">
	<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
	<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="kstidErrorConvertingTestFile" xml:space="preserve">
	<value>An error ocurred during conversion of test file.</value>
	<comment>Error message</comment>
  </data>
  <data name="kstidConversionError" xml:space="preserve">
	<value>Error</value>
  </data>
  <data name="kstidDiscardChangesConfirm" xml:space="preserve">
	<value>{0}

Click OK to continue making changes, or click Cancel to discard the changes to this converter.</value>
  </data>
  <data name="kstidInvalidConverterNotify" xml:space="preserve">
	<value>{0}

Click OK to continue making changes.</value>
  </data>
	<data name="kstidExistingConvMsg" xml:space="preserve">
	<value>A converter with the specified name already exists. Do you want to replace it?</value>
  </data>
  <data name="kstidNoNameMsg" xml:space="preserve">
	<value>A Converter Name has not been specified.</value>
  </data>
  <data name="kstidNoName" xml:space="preserve">
	<value>Invalid Converter Name</value>
  </data>
  <data name="kstidNoMapFileFound" xml:space="preserve">
	<value>The Converter Mapping File specified cannot be found.</value>
  </data>
  <data name="kstidInvalidMappingFile" xml:space="preserve">
	<value>Invalid Mapping File</value>
  </data>
  <data name="kstidInvalidMappingFileMsg" xml:space="preserve">
	<value>A Converter Mapping File has not been specified.</value>
  </data>
  <data name="kstidInvalidMappingName" xml:space="preserve">
	<value>Invalid Mapping Name</value>
  </data>
  <data name="kstidInvalidMappingFileNameMsg" xml:space="preserve">
	<value>A Mapping Name has not been specified.</value>
  </data>
  <data name="kstidInvalidCodePage" xml:space="preserve">
	<value>Invalid Code Page</value>
  </data>
  <data name="kstidNoCodePage" xml:space="preserve">
	<value>A Code Page has not been specified.</value>
  </data>
  <data name="kstidNumerousCopiesMade" xml:space="preserve">
	<value>Numerous Copies Made</value>
  </data>
  <data name="kstidNumerousCopiesMsg" xml:space="preserve">
	<value>Please rename your copies before making more copies.</value>
  </data>
  <data name="kstidInvalidRegularExpression" xml:space="preserve">
	<value>Invalid Regular Expression</value>
  </data>
  <data name="FindReplaceWarning" xml:space="preserve">
	<value>Find-&gt;Replace Warning</value>
  </data>
  <data name="kstidFindReplaceWarningMsg" xml:space="preserve">
	<value>The Find-&gt;Replace expression you have specified will find matches before, after and between all characters. Click OK to continue.</value>
  </data>
  <data name="kstidNoFindReplaceSymbolSpecified" xml:space="preserve">
	<value>Please provide the characters -&gt; between the Find expression and the Replace expression in the Find-&gt;Replace field.</value>
  </data>
  <data name="kstidSetupProcessor" xml:space="preserve">
	<value>Set up Processor</value>
  </data>
  <data name="kstidAvailableProcessors" xml:space="preserve">
	<value>Available Processors:</value>
  </data>
  <data name="kstidCopy" xml:space="preserve">
	<value>Copy</value>
  </data>
  <data name="kstidNewConverterName" xml:space="preserve">
	<value>New converter </value>
  </data>
  <data name="kstidICUErrorText" xml:space="preserve">
	<value>FieldWorks has detected an error with ICU Legacy Converters.{0}{0}To preserve your existing ICU Legacy Converters, close all dialogs, then exit and restart all '{1}' windows.</value>
	<comment>Error msgbox text with 0 being a newline and {1} being the app name</comment>
  </data>
  <data name="kstidICUErrorTitle" xml:space="preserve">
	<value>Error with ICU Legacy Converters</value>
	<comment>Error msgbox caption</comment>
  </data>
  <data name="kstidConverterNotCompleteMsg" xml:space="preserve">
	<value>The converter is not yet complete.</value>
	<comment>Error message when the user attempts to close the dialog, but all the necessary fields of the encoding converter are not included.</comment>
  </data>
  <data name="kstidConverterNotComplete" xml:space="preserve">
	<value>Not Finished</value>
	<comment>Error message caption</comment>
  </data>
  <data name="kstrUnspecifiedSaveError" xml:space="preserve">
    <value>Error Saving Converters</value>
    <comment>Message box title for an unspecified error in the Add Converter Dlg</comment>
  </data>
  <data name="kstrErrorInProperties" xml:space="preserve">
    <value>Error in converter properties.</value>
    <comment>Message box content for non specific errors in the converter properties</comment>
  </data>
  <data name="kstrUnhandledConverterException" xml:space="preserve">
    <value>Unhandled error saving converters: {0}</value>
    <comment>Message used to display unexpected exceptions caught when saving encoding converter changes.</comment>
  </data>
</root>