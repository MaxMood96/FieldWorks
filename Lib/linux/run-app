#!/bin/bash

# Run a FieldWorks application

[[ -z ${FW_DEBUG} ]] || set -x

STANDARD_XDG_DATA_HOME="${HOME}/.local/share"
XDG_DATA_HOME="${XDG_DATA_HOME:-${STANDARD_XDG_DATA_HOME}}"
EC_COMMON_APPLICATION_DATA_PATH="${XDG_DATA_HOME}/fec-common-app-data"

scriptdir=$(dirname "$0")
prefix=$(cd "$scriptdir/../.."; /bin/pwd)
lib=$prefix/lib/fieldworks
share=$prefix/share/fieldworks
sharedWsRoot="${EC_COMMON_APPLICATION_DATA_PATH}"
sharedWs=$sharedWsRoot/SIL/WritingSystemStore

# Usage: debug "foo baz" "bar"
debug() {
  [[ -z ${FW_DEBUG} ]] || echo -e "$(date +'%F %T') run-app[$$]: " "$@"
}

# Test for write permissions in global writing system store.
# If things are not set right, tell the user about it, erring on the side of
# giving them more information than less, to help them solve it.
# Test /var/lib/fieldworks not /var/lib/fieldworks/SIL/WritingSystemStore because the latter might not exist on the first run.
# See FWNX-1420.
# Note to power users: Upgrading Flex will result in permissions of the contents
# of /var/lib/fieldworks being reset to being group-owned by fieldworks, g+w, and directories setgid,
# as performed by fieldworks-applications.postinst.
if [ $(find $sharedWsRoot -not -writable -print | wc -l) -gt 0 ]
then
	user_in_fieldworks_group_now="$(groups|grep -w fieldworks)"
	user_in_fieldworks_group_at_all="$(id $(whoami) -Gn|grep -w fieldworks)"
	additional_text=""
	if [ -z "$user_in_fieldworks_group_now" -a -n "$user_in_fieldworks_group_at_all" ]; then
		additional_text="It appears that this is the situation. Log out or reboot and then run FieldWorks again.

"
	elif [ -z "$user_in_fieldworks_group_at_all" ]; then
		additional_text="But it appears that your user account has not been added to the fieldworks group.
"
	elif [ -n "$user_in_fieldworks_group_now" ]; then
		more_text="
However, your user is correctly in the fieldworks group but there are still write-permission
problems in $sharedWsRoot. Perhaps the permissions were customized after installation.
If so, have your computer administrator log in and fix the permissions by launching Terminal
and executing:

    sudo dpkg-reconfigure fieldworks-applications"
	fi

	zenity --error --no-wrap --text="This software cannot be run.

Missing write permissions on essential files or directories in $sharedWsRoot.

If you just installed FieldWorks, or were just added to the fieldworks group,
you will receive this error until you log out or reboot.
${additional_text}If you have already tried logging out or rebooting, then you need to
have a computer administrator add your user to the fieldworks group. To do this, have the
computer administrator log in, launch Terminal, and execute the following command:

    sudo adduser $(whoami) fieldworks
$more_text"
	exit 1
fi

"$share/setup-user"

cd "$lib"; RUNMODE="INSTALLED" . environ; cd $OLDPWD
# set the LANG enviroment variable according to the value of UserWs in the registry.
# unfortunately, there doesn't seem to be a Mono registry access utility, so we'll
# use XSLT.  This is needed for localizations to work with fontconfig.
# REVIEW (Hasso) 2020.08: fontconfig was needed to resolve FWNX-947 (Chinese characters displaying as boxes because the Chinese LDML file specified
# a Windows-specific font). The Chinese LDML file no longer specifies a font; unfortunately, Chinese localisation no longer seems to work on Linux
# (at least Ubuntu 20.04 Focal; see LT-20330). Setting LANG=$USERWS causes problems opening helps for all languages except zh-CN (LT-20270).
# Depending on how LT-20330 is resolved, this section can be either uncommented or removed.
#if [ -f $HOME/.mono/registry/CurrentUser/software/sil/fieldworks/9/values.xml ]; then
#	USERWS=$(xsltproc ${lib}/extract-userws.xsl $HOME/.mono/registry/CurrentUser/software/sil/fieldworks/9/values.xml)
#	if [ -n "$USERWS" ] && [ "$USERWS" = "zh-CN" ]; then export LANG=$USERWS; fi
#fi

cd "$share" # Temporary
command="${FW_COMMAND_PREFIX} ${FW_MONO_COMMAND:-mono} ${FW_MONO_OPTS} --debug ""$lib"/"$@"
debug "Executing ${command} from dir $(pwd) in the following environment:\n$(env)"
exec ${command}
